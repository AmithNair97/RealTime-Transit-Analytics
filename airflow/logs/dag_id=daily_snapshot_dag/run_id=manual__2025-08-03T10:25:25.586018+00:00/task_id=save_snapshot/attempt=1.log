{"timestamp":"2025-08-03T10:25:27.789385","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-03T10:25:27.789807","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/daily_snapshot_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-03T10:25:27.895315Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-03T10:25:27.895438Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-03T10:25:27.895493Z","level":"info","event":"Current task name:save_snapshot","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-03T10:25:27.895532Z","level":"info","event":"Dag name:daily_snapshot_dag","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-03T10:25:27.899931","level":"warning","event":"/opt/airflow/dags/daily_snapshot_dag.py:16: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-08-03T10:25:27.900302","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"DatabaseError","exc_value":"Execution failed on sql 'SELECT * FROM gps_stream;': relation \"gps_stream\" does not exist\nLINE 1: SELECT * FROM gps_stream;\n                      ^\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":877,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1164,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":217,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":240,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/daily_snapshot_dag.py","lineno":16,"name":"save_daily_snapshot"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/io/sql.py","lineno":706,"name":"read_sql"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/io/sql.py","lineno":2738,"name":"read_query"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/io/sql.py","lineno":2686,"name":"execute"}],"is_group":false,"exceptions":[]},{"exc_type":"UndefinedTable","exc_value":"relation \"gps_stream\" does not exist\nLINE 1: SELECT * FROM gps_stream;\n                      ^\n","exc_notes":[],"syntax_error":null,"is_cause":true,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/io/sql.py","lineno":2674,"name":"execute"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-08-03T10:25:27.900767Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-03T10:25:27.904686Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-03T10:25:27.904801Z","level":"info","event":"Task:<Task(PythonOperator): save_snapshot>","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-03T10:25:27.904890Z","level":"info","event":"Failure caused by Execution failed on sql 'SELECT * FROM gps_stream;': relation \"gps_stream\" does not exist","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-03T10:25:27.904971Z","level":"info","event":"LINE 1: SELECT * FROM gps_stream;","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-03T10:25:27.905034Z","level":"info","event":"                      ^","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-03T10:25:27.905163Z","level":"info","event":"","chan":"stdout","logger":"task"}
